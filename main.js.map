{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/phone-book/phone-book.component.html","./src/app/components/phone-book/phone-book.component.ts","./src/app/app.module.ts","./src/app/components/login-page/login-page.component.html","./src/app/components/login-page/login-page.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'phone-book-app';\n}\n","<router-outlet></router-outlet>","<div class=\"list-row\">\n    <div class=\"row mx-0 padding20\">\n      <div class=\"col-lg-5 col-12 pb-2\">\n        <div class=\"card-content\">\n          <div class=\"row mx-0 content\">\n            <h1>Welcome {{ UserName }}</h1>\n            <div class=\"col-12 px-0 mb-2\">\n              <label>Name</label>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                required\n                [(ngModel)]=\"name\" maxlength=\"11\"\n              />\n            </div>\n            <div class=\"col-12 px-0 mb-2\">\n              <label>Phone No</label>\n              <input\n                class=\"form-control\"\n                type=\"tel\"\n                required\n                [(ngModel)]=\"phone\"\n              />\n            </div>\n           <div class=\"col-12 p-0 d-flex\">\n  \n            <button class=\"btn btnLogin\" (click)=\"AddPhone()\" [disabled]=\"isEdit\">Add</button>\n            <button *ngIf=\"isEdit\" class=\"btn btnLogin ml-1\" (click)=\"updatePhone()\">\n              Update\n            </button>\n           </div>\n           <div class=\"alert alert-danger col-12 mb-0 mt-2\" *ngIf=\"error\" role=\"alert\">\n            {{message}} \n          </div>\n        \n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-7 col-12 pb-2\" *ngIf=\"phoneList.length > 0\">\n        <div class=\"card-content overflow-auto\"  >\n          <h3>Contact List</h3>\n  \n          <table class=\"table PhoneBookTable\">\n  \n            <th>Name</th>\n            <th>Phone No</th>\n            <th></th>\n            <tr *ngFor=\"let item of phoneList; let i = index\">\n              <td>\n                {{ item.name }}\n              </td>\n              <td>\n                {{ item.phone }}\n              </td>\n              <td>\n                <div class=\"d-flex\">\n                <button class=\"btn btn-primary tablebtn\" (click)=\"editPhone(i, item)\">Edit</button>\n                <button class=\"btn btn-danger ml-2 tablebtn\" (click)=\"deletePhone(i)\">Delete</button>\n              </div>\n              </td>\n              \n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-phone-book',\n  templateUrl: './phone-book.component.html',\n  styleUrls: ['./phone-book.component.scss'],\n})\nexport class PhoneBookComponent implements OnInit {\n  constructor() {}\n  UserName: any;\n  phoneDetail: any;\n  phoneList: any[] = [];\n  name: any;\n  phone: any;\n  error: any;\n  currentPhoneIndex: any;\n  message: any;\n  isEdit: any;\n\n  AddPhone() {\n    if (!this.name) {\n      this.message = 'Name is required!';\n      this.error = true;\n    } else if (!this.phone) {\n      this.message = 'Phone No is required!';\n      this.error = true;\n    } else if (this.phone && this.name) {\n      this.phoneDetail = {\n        name: this.name,\n        phone: this.phone,\n      };\n      this.phoneList.push(this.phoneDetail);\n      this.error = null;\n\n      this.name = '';\n      this.phone = '';\n    }\n  }\n\n  editPhone(index: any, item: any) {\n    this.phone = item.phone;\n    this.name = item.name;\n    this.currentPhoneIndex = index;\n    this.isEdit = true;\n  }\n\n  updatePhone() {\n    let data = this.currentPhoneIndex;\n    this.phoneList[data].name = this.name;\n    this.phoneList[data].phone = this.phone;\n    this.name = '';\n    this.phone = '';\n    this.isEdit = null;\n  }\n\n  deletePhone(index: any) {\n    this.phoneList.splice(index, 1);\n  }\n  ngOnInit(): void {\n    this.UserName=history.state.user\n\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { PhoneBookComponent } from './components/phone-book/phone-book.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    PhoneBookComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    \n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container\">\n    <div class=\"card-content col-lg-5 col-12 m-auto\">\n  \n    <div class=\"row mx-0 content\">\n      <h3 class=\"mb-4\">ACCOUNT LOGIN</h3>\n      <div class=\"col-12 px-0 mb-2\">\n        <label>USERNAME</label>\n        <input class=\"form-control\" type=\"email\" required [(ngModel)]=\"email\" />\n      </div>\n      <div class=\"col-12 px-0 mb-2\">\n        <label>PASSWORD</label>\n        <input class=\"form-control\" type=\"password\" required [(ngModel)]=\"password\" />\n      </div>\n      <button class=\"btn btnLogin\" (click)=\"Login()\">Login</button>\n    </div>\n    <div class=\"alert alert-danger mb-0 mt-2\" *ngIf=\"error\" role=\"alert\">\n      {{message}} \n    </div>\n    <div class=\"alert alert-success mb-0 mt-2\" *ngIf=\"success\" role=\"alert\">\n      {{message}} \n    </div>\n  </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  email:any\n  password :any\n  message:any\n  error:any\n  success:any\n  constructor(private route:Router) { }\n\n  \n  Login(){\n\n    if(!this.email){\n\n      this.message=\"Email is required!\"\n      this.error = true\n\n    }\n    else if(!this.password ){\n\n      this.message=\"Password is required!\"\n      this.error = true\n\n    }\n\n    else if(this.email == \"dev\"  && this.password==1234){\n      this.message=\"Login Succesfully\"\n      this.error = null\n      this.success = true\n      setTimeout(() => {\n        this.route.navigate(['phone-book'],{\n          state:{\n            user:\"dev\"\n          }\n        });\n        \n      }, 300);\n\n    }\n    else if(this.email != \"dev\"  && this.password != 1234){\n      this.message=\"Incorrect Email or Password\"\n      this.success = null\n      this.error = true\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { PhoneBookComponent } from './components/phone-book/phone-book.component';\n\nconst routes: Routes = [\n  {\n    path:'',redirectTo:'login',pathMatch:'full'\n  },\n  {\n    path:'login',component:LoginPageComponent\n  }\n\n  ,{\n    path:'phone-book',component:PhoneBookComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}